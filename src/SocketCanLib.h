#include <linux/can.h>

int sf (int a);

// Открывает сокет на CAN-интерфейсе с именем InterfaceName
//  В случае успеха возвращает неотрицательный хендлер сокета
//  При ошибке возращает код ошибки в формате:
//   -100*errno для ошибок в socket()
//   -10000*errno для ошибок в ioctl()
//   -1000000*errno для ошибов в bind()
int SocketOpen (char *InterfaceName);

// Закрывает открытый сокет
//  В случае успеха возвращает 0
//  При ошибке возвращает код ошибки: -1*errno в функции close()
int SocketClose (int number);

// Читает сообщение из входящий буфер сокета.
//  При отсутсвии сообщений в буфере блокируется до появления первого
//  Еслу удалось считать, возвращает 1
//  При ошибке - отрицательный код ошибки
int SocketRead (int Socket, struct can_frame *Frame);

// Ставит сообщение в очередь SocketCan на отправку
//  Если очередь свободна, то не блокирует
//  Иначе блокируется до освобожения места в очереди
//  Возвращает 1 в случае успеха и отрицательный код ошибки при ошибке
int SocketWrite (int Socket, struct can_frame *Frame);
